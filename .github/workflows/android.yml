name: Android Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew assembleRelease

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload APKs to release
        uses: actions/upload-artifact@v2
        with:
          name: apks
          path: |
            ${{ github.workspace }}/app/build/outputs/apk/tencent/release/*.apk
            ${{ github.workspace }}/app/build/outputs/apk/xiaomi/release/*.apk

      - name: Get release assets
        id: get_release_assets
        uses: actions/github-script@v4
        with:
          script: |
            const response = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: 'v${{ github.run_number }}'
            });
            console.log(JSON.stringify(response.data.assets))

      - name: Download release assets
        uses: actions/download-artifact@v2
        with:
          name: apks
          path: ${{ github.workspace }}/apks

      - name: Publish release assets
        id: publish_release_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_assets.outputs.data[0].url }}
          asset_path: ${{ github.workspace }}/apks/*.apk
          asset_name: ${{ steps.get_release_assets.outputs.data[0].name }}
          asset_content_type: application/vnd.android.package-archive
